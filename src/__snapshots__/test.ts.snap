// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`route generation typescript 1`] = `
"// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.'
// Run \`yarn nextjs-routes\` to regenerate this file.
/* eslint-disable */

type Route =
  | { pathname?: '/404'; query?: Query | undefined }
  | { pathname?: '/[foo]'; query: Query<{ foo: string; }> }
  | { pathname?: '/[foo]/[bar]/[baz]'; query: Query<{ foo: string;bar: string;baz: string; }> }
  | { pathname?: '/[foo]/bar/[baz]'; query: Query<{ foo: string;baz: string; }> }
  | { pathname?: '/[foo]/bar/[baz]/foo/[bar]'; query: Query<{ foo: string;baz: string;bar: string; }> }
  | { pathname?: '/[foo]/baz'; query: Query<{ foo: string; }> }
  | { pathname?: '/_debug/health-check'; query?: Query | undefined }
  | { pathname?: '/_error'; query?: Query | undefined }
  | { pathname?: '/api/[[...segments]]'; query?: Query | undefined }
  | { pathname?: '/api/[...segments]'; query: Query<{ segments: string[]; }> }
  | { pathname?: '/api/bar'; query?: Query | undefined }
  | { pathname?: '/foo/[slug]'; query: Query<{ slug: string; }> }
  | { pathname?: '/'; query?: Query | undefined }
  | { pathname?: '/not-found'; query?: Query | undefined }
  | { pathname?: '/settings/bars/[bar]'; query: Query<{ bar: string; }> }
  | { pathname?: '/settings/bars/[bar]/baz'; query: Query<{ bar: string; }> }
  | { pathname?: '/settings/foo'; query?: Query | undefined }
  | { pathname?: '/settings'; query?: Query | undefined }

type Query<Params = {}> = Params & {
  [key: string]: string;
}

type Pathname = Exclude<Route[\\"pathname\\"], undefined>;

type QueryForPathname = {
  [K in Route as K[\\"pathname\\"]]: Exclude<K[\\"query\\"], undefined>;
};

declare module \\"next/link\\" {
  import type { LinkProps as NextLinkProps } from \\"next/dist/client/link\\";
  import type { PropsWithChildren, MouseEventHandler } from \\"react\\";

  export interface LinkProps extends Omit<NextLinkProps, \\"href\\"> {
    href: Route;
  }

  declare function Link(
    props: PropsWithChildren<LinkProps>
  ): DetailedReactHTMLElement<
    {
      onMouseEnter?: MouseEventHandler<Element> | undefined;
      onClick: MouseEventHandler;
      href?: string | undefined;
      ref?: any;
    },
    HTMLElement
  >;

  export default Link;
}

declare module \\"next/router\\" {
  import type { NextRouter as Router } from \\"next/dist/client/router\\";
  export { RouterEvent } from \\"next/dist/client/router\\";

  type TransitionOptions = Parameters<Router[\\"push\\"]>[2];

  export interface NextRouter<P extends Pathname = Pathname> extends Omit<Router, \\"push\\" | \\"replace\\"> {
    pathname: P;
    route: P; 
    query: QueryForPathname[P];
    push(url: Route, as?: string, options?: TransitionOptions): Promise<boolean>;
    replace(
      url: Route,
      as?: string,
      options?: TransitionOptions
    ): Promise<boolean>;
  }

  export function useRouter<P extends Pathname>(): NextRouter<P>;
}

"
`;
